<?xml version="1.0" encoding="UTF-8"?>

<project name="basic-app" basedir=".">
    
    <target name="create-assets-dir" description="Create assets dir if does not exist">
        <mkdir dir="${basedir}/src/main/assets" />
    </target>
    
    <target name="list-activators" description="Extract list of bundle activators from manfest files" depends="create-assets-dir">
        <echo message="Extracting bundle activators..." />
        <script language="javascript">
            <![CDATA[
                load("nashorn:mozilla_compat.js");
                importClass(java.lang.StringBuilder);
                importClass(java.io.File);
                importClass(java.io.FileReader);
                importClass(java.io.BufferedReader);
                importClass(java.io.PrintWriter);
                
                function processManifest(manifestFile, writer){
                    var bin = new BufferedReader(new FileReader(manifestFile));
                    var line, found=false;
                    var sb = new StringBuilder();
                    while((line = bin.readLine()) != null){
                        if(line.startsWith("Bundle-Activator")){
                            sb.append(line.split(":")[1].trim()); 
                            //read next lines
                            while((line = bin.readLine()) != null){
                                if(line.startsWith(" ")){
                                    sb.append(line.trim());
                                } else {
                                    break;
                                }
                            }
                            break;
                        }
                    }
                    bin.close();
                    if(sb.length() > 0){
                        writer.println(sb.toString());
                    }
                }
                
                var separator = project.getProperty("file.separator");
                var depDirPath = project.getProperty("project.build.directory") + separator + "dependency";
                var listFile = new File(project.getProperty("activators.list.file"));
                var writer = new PrintWriter(listFile);
                // list artifact dirs
                var depDir = new File(depDirPath);
                var artifactDirs = depDir.listFiles();
                for(i = 0;i < artifactDirs.length;i++){
                    var manifest = new File(artifactDirs[i], "META-INF/MANIFEST.MF");
                    if(!manifest.exists()){
		      continue;
		    }
                   processManifest(manifest, writer);
                }
                // process manifests from aar libraries
                var unpackedLibPath =  project.getProperty("project.build.directory") + separator + "unpacked-libs";
                var libDir = new File(unpackedLibPath);
                self.log("Unpacked lib dir: " + unpackedLibPath);
                var libDirs = libDir.listFiles();
                for(i = 0;i < libDirs.length;i++){
                    self.log("Lib dir: " + libDirs[i].getName());
                    var assetDir = new File(libDirs[i], "assets");
                    var files = assetDir.listFiles();
                    for(j = 0;j < files.length;j++){
                        if(files[j].getName().endsWith(".MF")){
                            self.log("Found manifest " + files[j]);
                            processManifest(files[j], writer);
                        }
                    }
                }
                
                writer.close();
            ]]>
        </script>
    </target>
    
</project>
